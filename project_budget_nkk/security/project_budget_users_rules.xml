<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="project_budget_project_rule_director" model="ir.rule">
        <field name="name">Director: see all opportunities</field>
        <field name="model_id" ref="model_project_budget_projects"/>
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="groups" eval="[(4, ref('project_budget_nkk.project_budget_group_director'))]"/>
    </record>

    <record id="project_budget.ir_rule_project_budget_access_supervisor_manager" model="ir.rule">
        <field name="name">Access to project budget specification by supervisor anf manager access</field>
        <field name="model_id" ref="project_budget.model_project_budget_projects"/>
        <field name="domain_force">
            [
                '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|',
                ('responsibility_center_id.head_id', '=', user.id),
                ('project_member_ids.employee_id.user_id', '=', user.id),
                ('project_member_ids.employee_id.user_id', 'in', user.with_context(kam_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('project_member_ids.employee_id.user_id', 'in', user.with_context(project_manager_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('step_project_parent_id.project_member_ids.employee_id.user_id', '=', user.id),
                ('step_project_parent_id.project_member_ids.employee_id.user_id', 'in', user.with_context(kam_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('step_project_parent_id.project_member_ids.employee_id.user_id', 'in', user.with_context(project_manager_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('parent_project_id.project_member_ids.employee_id.user_id', '=', user.id),
                ('parent_project_id.project_member_ids.employee_id.user_id', 'in', user.with_context(kam_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('parent_project_id.project_member_ids.employee_id.user_id', 'in', user.with_context(project_manager_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('project_supervisor_id.id','in', user.supervisor_rule.ids),
                ('parent_project_id.project_supervisor_id.id','in', user.supervisor_rule.ids)
            ]
        </field>
        <field name="groups" eval="[(4, ref('project_budget.project_budget_users'))]"/>
        <field name="perm_read" eval="True"/>
        <field name="perm_write" eval="True"/>
        <field name="perm_create" eval="True"/>
        <field name="perm_unlink" eval="True"/>
    </record>

    <record id="project_budget.project_budget_project_overdue_report_user_rule" model="ir.rule">
        <field name="name">Project budget user: see my overdue projects</field>
        <field name="model_id" ref="project_budget.model_project_budget_project_overdue_report"/>
        <field name="domain_force">
            [
                '|', '|', '|', '|', '|', '|', '|', '|', '|', '|', '|',
                ('responsibility_center_id.head_id', '=', user.id),
                ('project_id.project_member_ids.employee_id.user_id', '=', user.id),
                ('project_id.project_member_ids.employee_id.user_id', 'in', user.with_context(kam_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('project_id.project_member_ids.employee_id.user_id', 'in', user.with_context(project_manager_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('step_id.project_member_ids.employee_id.user_id', '=', user.id),
                ('step_id.project_member_ids.employee_id.user_id', 'in', user.with_context(kam_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('step_id.project_member_ids.employee_id.user_id', 'in', user.with_context(project_manager_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('project_id.parent_project_id.project_member_ids.employee_id.user_id', '=', user.id),
                ('project_id.parent_project_id.project_member_ids.employee_id.user_id', 'in', user.with_context(kam_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('project_id.parent_project_id.project_member_ids.employee_id.user_id', 'in', user.with_context(project_manager_function=True).employee_id.replaceable_employee_ids.user_id.ids),
                ('project_id.project_supervisor_id.id', 'in', user.supervisor_rule.ids),
                ('project_id.parent_project_id.project_supervisor_id.id', 'in', user.supervisor_rule.ids)
            ]
        </field>
        <field name="groups" eval="[(4, ref('project_budget.project_budget_users'))]"/>
    </record>

    <record id="ir_rule_project_budget_access_budget_plan_supervisor" model="ir.rule">
        <field name="name">Access to budge–µ plan supervisor</field>
        <field name="model_id" ref="project_budget.model_project_budget_budget_plan_supervisor"/>
        <field name="domain_force">
            [
                ('supervisor_id', '=', user.id)
            ]
        </field>
        <field name="groups" eval="[(4, ref('project_budget.project_budget_users'))]"/>
        <field name="perm_read" eval="True"/>
        <field name="perm_write" eval="True"/>
        <field name="perm_create" eval="True"/>
        <field name="perm_unlink" eval="True"/>
    </record>

    <record id="project_budget.ir_rule_project_budget_access_budget_plan_kam" model="ir.rule">
        <field name="name">Access to budget plan kam</field>
        <field name="model_id" ref="project_budget.model_project_budget_budget_plan_kam"/>
        <field name="domain_force">
            [
                '|', ('supervisor_id', '=', user.id), ('key_account_manager_id.user_id', '=', user.id)
            ]
        </field>
        <field name="groups" eval="[(4, ref('project_budget.project_budget_users'))]"/>
        <field name="perm_read" eval="True"/>
        <field name="perm_write" eval="True"/>
        <field name="perm_create" eval="True"/>
        <field name="perm_unlink" eval="True"/>
    </record>

    <record id="project_budget_project_supervisor_rule_company" model="ir.rule">
        <field name="name">Project supervisor multi-company rule</field>
        <field name="model_id" ref="model_project_budget_project_supervisor"/>
        <field name="domain_force">
            [
                '|', ('company_id', '=', False), ('company_id', 'in', company_ids)
            ]
        </field>
    </record>
</odoo>
